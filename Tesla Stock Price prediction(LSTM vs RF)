{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f5680f37",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-04-18T19:39:57.867394Z",
     "iopub.status.busy": "2024-04-18T19:39:57.866696Z",
     "iopub.status.idle": "2024-04-18T19:40:12.035367Z",
     "shell.execute_reply": "2024-04-18T19:40:12.033472Z"
    },
    "papermill": {
     "duration": 14.184729,
     "end_time": "2024-04-18T19:40:12.039431",
     "exception": false,
     "start_time": "2024-04-18T19:39:57.854702",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type='text/css'>\n",
       ".datatable table.frame { margin-bottom: 0; }\n",
       ".datatable table.frame thead { border-bottom: none; }\n",
       ".datatable table.frame tr.coltypes td {  color: #FFFFFF;  line-height: 6px;  padding: 0 0.5em;}\n",
       ".datatable .bool    { background: #DDDD99; }\n",
       ".datatable .object  { background: #565656; }\n",
       ".datatable .int     { background: #5D9E5D; }\n",
       ".datatable .float   { background: #4040CC; }\n",
       ".datatable .str     { background: #CC4040; }\n",
       ".datatable .time    { background: #40CC40; }\n",
       ".datatable .row_index {  background: var(--jp-border-color3);  border-right: 1px solid var(--jp-border-color0);  color: var(--jp-ui-font-color3);  font-size: 9px;}\n",
       ".datatable .frame tbody td { text-align: left; }\n",
       ".datatable .frame tr.coltypes .row_index {  background: var(--jp-border-color0);}\n",
       ".datatable th:nth-child(2) { padding-left: 12px; }\n",
       ".datatable .hellipsis {  color: var(--jp-cell-editor-border-color);}\n",
       ".datatable .vellipsis {  background: var(--jp-layout-color0);  color: var(--jp-cell-editor-border-color);}\n",
       ".datatable .na {  color: var(--jp-cell-editor-border-color);  font-size: 80%;}\n",
       ".datatable .sp {  opacity: 0.25;}\n",
       ".datatable .footer { font-size: 9px; }\n",
       ".datatable .frame_dimensions {  background: var(--jp-border-color3);  border-top: 1px solid var(--jp-border-color0);  color: var(--jp-ui-font-color3);  display: inline-block;  opacity: 0.6;  padding: 1px 10px 1px 5px;}\n",
       "</style>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib. pyplot as plt\n",
    "import matplotlib\n",
    "#from sklearn.Preprocessing import MinMaxScaler\n",
    "from keras.layers import LSTM, Dense, Dropout\n",
    "from keras.models import Sequential\n",
    "from keras.utils.vis_utils import plot_model\n",
    "\n",
    "from sklearn.model_selection import TimeSeriesSplit\n",
    "from sklearn.metrics import mean_squared_error, r2_score\n",
    "import matplotlib. dates as mandates\n",
    "from sklearn import preprocessing \n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "from sklearn import linear_model\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd \n",
    "from sklearn.metrics import mean_squared_log_error\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from lightgbm import LGBMRegressor\n",
    "import plotly.express as px\n",
    "import plotly.graph_objects as go\n",
    "from plotly.subplots import make_subplots\n",
    "from sklearn.model_selection import RandomizedSearchCV\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "712c60fd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-18T19:40:12.059541Z",
     "iopub.status.busy": "2024-04-18T19:40:12.059023Z",
     "iopub.status.idle": "2024-04-18T19:40:12.124502Z",
     "shell.execute_reply": "2024-04-18T19:40:12.123087Z"
    },
    "papermill": {
     "duration": 0.079041,
     "end_time": "2024-04-18T19:40:12.127563",
     "exception": false,
     "start_time": "2024-04-18T19:40:12.048522",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2023-04-19</th>\n",
       "      <td>179.10</td>\n",
       "      <td>183.50</td>\n",
       "      <td>177.65</td>\n",
       "      <td>180.59</td>\n",
       "      <td>125,732,703</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-04-18</th>\n",
       "      <td>187.15</td>\n",
       "      <td>187.69</td>\n",
       "      <td>183.58</td>\n",
       "      <td>184.31</td>\n",
       "      <td>92,067,023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-04-17</th>\n",
       "      <td>186.32</td>\n",
       "      <td>189.69</td>\n",
       "      <td>182.69</td>\n",
       "      <td>187.04</td>\n",
       "      <td>116,662,203</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-04-14</th>\n",
       "      <td>183.95</td>\n",
       "      <td>186.28</td>\n",
       "      <td>182.01</td>\n",
       "      <td>185.00</td>\n",
       "      <td>96,438,656</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-04-13</th>\n",
       "      <td>182.96</td>\n",
       "      <td>186.50</td>\n",
       "      <td>180.94</td>\n",
       "      <td>185.90</td>\n",
       "      <td>112,933,000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Open    High     Low   Close       Volume\n",
       "Date                                                   \n",
       "2023-04-19  179.10  183.50  177.65  180.59  125,732,703\n",
       "2023-04-18  187.15  187.69  183.58  184.31   92,067,023\n",
       "2023-04-17  186.32  189.69  182.69  187.04  116,662,203\n",
       "2023-04-14  183.95  186.28  182.01  185.00   96,438,656\n",
       "2023-04-13  182.96  186.50  180.94  185.90  112,933,000"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Get the Dataset\n",
    "df=pd.read_csv('/kaggle/input/tesla-4-year-data/Tesla 4 year data.csv',na_values=['null'],index_col='Date',parse_dates=True,infer_datetime_format=True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5f27b776",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-18T19:40:12.146800Z",
     "iopub.status.busy": "2024-04-18T19:40:12.146347Z",
     "iopub.status.idle": "2024-04-18T19:40:12.155515Z",
     "shell.execute_reply": "2024-04-18T19:40:12.153854Z"
    },
    "papermill": {
     "duration": 0.022672,
     "end_time": "2024-04-18T19:40:12.158619",
     "exception": false,
     "start_time": "2024-04-18T19:40:12.135947",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(252, 5)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "976f085b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-18T19:40:12.178994Z",
     "iopub.status.busy": "2024-04-18T19:40:12.178552Z",
     "iopub.status.idle": "2024-04-18T19:40:12.186957Z",
     "shell.execute_reply": "2024-04-18T19:40:12.185703Z"
    },
    "papermill": {
     "duration": 0.02216,
     "end_time": "2024-04-18T19:40:12.189654",
     "exception": false,
     "start_time": "2024-04-18T19:40:12.167494",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Null Value Present:  False\n"
     ]
    }
   ],
   "source": [
    "\n",
    "print('Null Value Present: ', df.isnull().values.any())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "35875874",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-18T19:40:12.210446Z",
     "iopub.status.busy": "2024-04-18T19:40:12.209592Z",
     "iopub.status.idle": "2024-04-18T19:40:12.218850Z",
     "shell.execute_reply": "2024-04-18T19:40:12.217477Z"
    },
    "papermill": {
     "duration": 0.022955,
     "end_time": "2024-04-18T19:40:12.222110",
     "exception": false,
     "start_time": "2024-04-18T19:40:12.199155",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Open', 'High', 'Low', 'Close', 'Volume'], dtype='object')"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "b6ba2c2f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-18T19:40:12.243054Z",
     "iopub.status.busy": "2024-04-18T19:40:12.242584Z",
     "iopub.status.idle": "2024-04-18T19:40:12.609398Z",
     "shell.execute_reply": "2024-04-18T19:40:12.607966Z"
    },
    "papermill": {
     "duration": 0.381278,
     "end_time": "2024-04-18T19:40:12.612518",
     "exception": false,
     "start_time": "2024-04-18T19:40:12.231240",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Date'>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = plt.axes()\n",
    "ax.set_facecolor(\"black\")\n",
    "df['Close'].plot(color='red')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "401c2d7e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-18T19:40:12.635540Z",
     "iopub.status.busy": "2024-04-18T19:40:12.633946Z",
     "iopub.status.idle": "2024-04-18T19:40:12.643258Z",
     "shell.execute_reply": "2024-04-18T19:40:12.641621Z"
    },
    "papermill": {
     "duration": 0.024672,
     "end_time": "2024-04-18T19:40:12.647136",
     "exception": false,
     "start_time": "2024-04-18T19:40:12.622464",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "output_var = pd.DataFrame(df['Close'])\n",
    "#Selecting the Features\n",
    "features = ['Open', 'High', 'Low', 'Volume']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "023fffe0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-18T19:40:12.669307Z",
     "iopub.status.busy": "2024-04-18T19:40:12.668741Z",
     "iopub.status.idle": "2024-04-18T19:40:12.681176Z",
     "shell.execute_reply": "2024-04-18T19:40:12.679423Z"
    },
    "papermill": {
     "duration": 0.027402,
     "end_time": "2024-04-18T19:40:12.684116",
     "exception": false,
     "start_time": "2024-04-18T19:40:12.656714",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['Open']=df['Open'].astype(float)\n",
    "df['High']=df['High'].astype(float)\n",
    "df['Low']=df['Low'].astype(float)\n",
    "df['Volume']=df.Volume.str.split(',').str.join('').astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "50b964c9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-18T19:40:12.706585Z",
     "iopub.status.busy": "2024-04-18T19:40:12.704929Z",
     "iopub.status.idle": "2024-04-18T19:40:12.730554Z",
     "shell.execute_reply": "2024-04-18T19:40:12.728841Z"
    },
    "papermill": {
     "duration": 0.040074,
     "end_time": "2024-04-18T19:40:12.733446",
     "exception": false,
     "start_time": "2024-04-18T19:40:12.693372",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2023-04-19</th>\n",
       "      <td>0.298151</td>\n",
       "      <td>0.284361</td>\n",
       "      <td>0.329267</td>\n",
       "      <td>0.316811</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-04-18</th>\n",
       "      <td>0.329690</td>\n",
       "      <td>0.300967</td>\n",
       "      <td>0.355012</td>\n",
       "      <td>0.189639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-04-17</th>\n",
       "      <td>0.326438</td>\n",
       "      <td>0.308893</td>\n",
       "      <td>0.351148</td>\n",
       "      <td>0.282547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-04-14</th>\n",
       "      <td>0.317152</td>\n",
       "      <td>0.295379</td>\n",
       "      <td>0.348196</td>\n",
       "      <td>0.206153</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-04-13</th>\n",
       "      <td>0.313274</td>\n",
       "      <td>0.296251</td>\n",
       "      <td>0.343551</td>\n",
       "      <td>0.268460</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                Open      High       Low    Volume\n",
       "Date                                              \n",
       "2023-04-19  0.298151  0.284361  0.329267  0.316811\n",
       "2023-04-18  0.329690  0.300967  0.355012  0.189639\n",
       "2023-04-17  0.326438  0.308893  0.351148  0.282547\n",
       "2023-04-14  0.317152  0.295379  0.348196  0.206153\n",
       "2023-04-13  0.313274  0.296251  0.343551  0.268460"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Scaling\n",
    "scaler = MinMaxScaler()\n",
    "feature_transform = scaler.fit_transform(df[features])\n",
    "feature_transform= pd.DataFrame(columns=features, data=feature_transform, index=df.index)\n",
    "feature_transform.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "23e1bf05",
   "metadata": {
    "papermill": {
     "duration": 0.009383,
     "end_time": "2024-04-18T19:40:12.752577",
     "exception": false,
     "start_time": "2024-04-18T19:40:12.743194",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Creating a Training Set and a Test Set for Stock Market Prediction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "09030cd9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-18T19:40:12.774310Z",
     "iopub.status.busy": "2024-04-18T19:40:12.773368Z",
     "iopub.status.idle": "2024-04-18T19:40:12.786562Z",
     "shell.execute_reply": "2024-04-18T19:40:12.785177Z"
    },
    "papermill": {
     "duration": 0.027824,
     "end_time": "2024-04-18T19:40:12.789911",
     "exception": false,
     "start_time": "2024-04-18T19:40:12.762087",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Splitting to Training set and Test set\n",
    "timesplit= TimeSeriesSplit(n_splits=10)\n",
    "for train_index, test_index in timesplit.split(feature_transform):\n",
    "        X_train, X_test = feature_transform[:len(train_index)], feature_transform[len(train_index): (len(train_index)+len(test_index))]\n",
    "        y_train, y_test = output_var[:len(train_index)].values.ravel(), output_var[len(train_index): (len(train_index)+len(test_index))].values.ravel()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "244bfa97",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-18T19:40:12.813391Z",
     "iopub.status.busy": "2024-04-18T19:40:12.812413Z",
     "iopub.status.idle": "2024-04-18T19:40:12.820666Z",
     "shell.execute_reply": "2024-04-18T19:40:12.819677Z"
    },
    "papermill": {
     "duration": 0.022872,
     "end_time": "2024-04-18T19:40:12.823769",
     "exception": false,
     "start_time": "2024-04-18T19:40:12.800897",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Process the data for LSTM\n",
    "trainX =np.array(X_train)\n",
    "testX =np.array(X_test)\n",
    "X_train = trainX.reshape(X_train.shape[0], 1, X_train.shape[1])\n",
    "X_test = testX.reshape(X_test.shape[0], 1, X_test.shape[1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "da847767",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-18T19:40:12.847818Z",
     "iopub.status.busy": "2024-04-18T19:40:12.846477Z",
     "iopub.status.idle": "2024-04-18T19:40:13.454292Z",
     "shell.execute_reply": "2024-04-18T19:40:13.452137Z"
    },
    "papermill": {
     "duration": 0.62219,
     "end_time": "2024-04-18T19:40:13.457463",
     "exception": false,
     "start_time": "2024-04-18T19:40:12.835273",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Building the LSTM Model\n",
    "lstm = Sequential()\n",
    "lstm.add(LSTM(32, input_shape=(1, trainX.shape[1]), activation='relu', return_sequences=False))\n",
    "lstm.add(Dense(1))\n",
    "lstm.compile(loss='mean_squared_error', optimizer='adam')\n",
    "plot_model(lstm, show_shapes=True, show_layer_names=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "49b1fe4a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-18T19:40:13.481859Z",
     "iopub.status.busy": "2024-04-18T19:40:13.480872Z",
     "iopub.status.idle": "2024-04-18T19:40:25.762122Z",
     "shell.execute_reply": "2024-04-18T19:40:25.760010Z"
    },
    "papermill": {
     "duration": 12.297588,
     "end_time": "2024-04-18T19:40:25.765522",
     "exception": false,
     "start_time": "2024-04-18T19:40:13.467934",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/100\n",
      "29/29 [==============================] - 2s 4ms/step - loss: 49133.8828\n",
      "Epoch 2/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 49079.9961\n",
      "Epoch 3/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 49005.7852\n",
      "Epoch 4/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 48897.6641\n",
      "Epoch 5/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 48745.6289\n",
      "Epoch 6/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 48531.8359\n",
      "Epoch 7/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 48246.4609\n",
      "Epoch 8/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 47875.5312\n",
      "Epoch 9/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 47409.9492\n",
      "Epoch 10/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 46844.8789\n",
      "Epoch 11/100\n",
      "29/29 [==============================] - 0s 4ms/step - loss: 46178.7656\n",
      "Epoch 12/100\n",
      "29/29 [==============================] - 0s 5ms/step - loss: 45413.0859\n",
      "Epoch 13/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 44551.9258\n",
      "Epoch 14/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 43601.4570\n",
      "Epoch 15/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 42569.3086\n",
      "Epoch 16/100\n",
      "29/29 [==============================] - 0s 4ms/step - loss: 41464.0742\n",
      "Epoch 17/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 40294.7930\n",
      "Epoch 18/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 39070.6172\n",
      "Epoch 19/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 37800.5352\n",
      "Epoch 20/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 36493.2188\n",
      "Epoch 21/100\n",
      "29/29 [==============================] - 0s 4ms/step - loss: 35156.8711\n",
      "Epoch 22/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 33799.1992\n",
      "Epoch 23/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 32427.3730\n",
      "Epoch 24/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 31048.0566\n",
      "Epoch 25/100\n",
      "29/29 [==============================] - 0s 4ms/step - loss: 29667.3730\n",
      "Epoch 26/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 28290.9590\n",
      "Epoch 27/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 26924.0000\n",
      "Epoch 28/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 25571.2363\n",
      "Epoch 29/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 24236.9863\n",
      "Epoch 30/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 22925.1992\n",
      "Epoch 31/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 21639.4453\n",
      "Epoch 32/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 20382.9531\n",
      "Epoch 33/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 19158.6035\n",
      "Epoch 34/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 17968.9902\n",
      "Epoch 35/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 16816.3750\n",
      "Epoch 36/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 15702.7363\n",
      "Epoch 37/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 14629.7598\n",
      "Epoch 38/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 13598.8643\n",
      "Epoch 39/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 12611.1826\n",
      "Epoch 40/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 11667.6035\n",
      "Epoch 41/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 10768.7471\n",
      "Epoch 42/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 9915.0000\n",
      "Epoch 43/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 9106.4980\n",
      "Epoch 44/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 8343.1602\n",
      "Epoch 45/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 7624.6787\n",
      "Epoch 46/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 6950.5371\n",
      "Epoch 47/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 6320.0200\n",
      "Epoch 48/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 5732.2329\n",
      "Epoch 49/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 5186.1064\n",
      "Epoch 50/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 4680.4170\n",
      "Epoch 51/100\n",
      "29/29 [==============================] - 0s 4ms/step - loss: 4213.7974\n",
      "Epoch 52/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 3784.7524\n",
      "Epoch 53/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 3391.6865\n",
      "Epoch 54/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 3032.9058\n",
      "Epoch 55/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 2706.6465\n",
      "Epoch 56/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 2411.0920\n",
      "Epoch 57/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 2144.3857\n",
      "Epoch 58/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 1904.6561\n",
      "Epoch 59/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 1690.0264\n",
      "Epoch 60/100\n",
      "29/29 [==============================] - 0s 4ms/step - loss: 1498.6351\n",
      "Epoch 61/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 1328.6547\n",
      "Epoch 62/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 1178.2954\n",
      "Epoch 63/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 1045.8304\n",
      "Epoch 64/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 929.5981\n",
      "Epoch 65/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 828.0144\n",
      "Epoch 66/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 739.5812\n",
      "Epoch 67/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 662.8923\n",
      "Epoch 68/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 596.6341\n",
      "Epoch 69/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 539.5922\n",
      "Epoch 70/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 490.6500\n",
      "Epoch 71/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 448.7887\n",
      "Epoch 72/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 413.0846\n",
      "Epoch 73/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 382.7065\n",
      "Epoch 74/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 356.9097\n",
      "Epoch 75/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 335.0347\n",
      "Epoch 76/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 316.4980\n",
      "Epoch 77/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 300.7891\n",
      "Epoch 78/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 287.4625\n",
      "Epoch 79/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 276.1334\n",
      "Epoch 80/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 266.4701\n",
      "Epoch 81/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 258.1894\n",
      "Epoch 82/100\n",
      "29/29 [==============================] - 0s 4ms/step - loss: 251.0500\n",
      "Epoch 83/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 244.8497\n",
      "Epoch 84/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 239.4162\n",
      "Epoch 85/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 234.6079\n",
      "Epoch 86/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 230.3063\n",
      "Epoch 87/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 226.4142\n",
      "Epoch 88/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 222.8512\n",
      "Epoch 89/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 219.5524\n",
      "Epoch 90/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 216.4647\n",
      "Epoch 91/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 213.5457\n",
      "Epoch 92/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 210.7617\n",
      "Epoch 93/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 208.0855\n",
      "Epoch 94/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 205.4959\n",
      "Epoch 95/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 202.9759\n",
      "Epoch 96/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 200.5131\n",
      "Epoch 97/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 198.0973\n",
      "Epoch 98/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 195.7210\n",
      "Epoch 99/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 193.3783\n",
      "Epoch 100/100\n",
      "29/29 [==============================] - 0s 3ms/step - loss: 191.0652\n"
     ]
    }
   ],
   "source": [
    "#Model Training\n",
    "history=lstm.fit(X_train, y_train, epochs=100, batch_size=8, verbose=1, shuffle=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "8a796dea",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-18T19:40:25.862492Z",
     "iopub.status.busy": "2024-04-18T19:40:25.860738Z",
     "iopub.status.idle": "2024-04-18T19:40:26.173736Z",
     "shell.execute_reply": "2024-04-18T19:40:26.172529Z"
    },
    "papermill": {
     "duration": 0.363986,
     "end_time": "2024-04-18T19:40:26.176828",
     "exception": false,
     "start_time": "2024-04-18T19:40:25.812842",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1/1 [==============================] - 0s 245ms/step\n"
     ]
    }
   ],
   "source": [
    "#LSTM Prediction\n",
    "y_pred= lstm.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "bb4b936b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-18T19:40:26.274103Z",
     "iopub.status.busy": "2024-04-18T19:40:26.273529Z",
     "iopub.status.idle": "2024-04-18T19:40:26.541687Z",
     "shell.execute_reply": "2024-04-18T19:40:26.540280Z"
    },
    "papermill": {
     "duration": 0.321054,
     "end_time": "2024-04-18T19:40:26.545288",
     "exception": false,
     "start_time": "2024-04-18T19:40:26.224234",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Predicted vs True Adj Close Value – LSTM\n",
    "ax = plt.axes()\n",
    "ax.set_facecolor(\"black\")\n",
    "plt.plot(y_test, label='True Value', color='green')\n",
    "plt.plot(y_pred, label='LSTM Value', color='red')\n",
    "plt.title('Prediction by LSTM')\n",
    "plt.xlabel('Time Scale')\n",
    "plt.ylabel('Scaled USD')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "848ca973",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-18T19:40:26.641974Z",
     "iopub.status.busy": "2024-04-18T19:40:26.641365Z",
     "iopub.status.idle": "2024-04-18T19:40:26.650710Z",
     "shell.execute_reply": "2024-04-18T19:40:26.648864Z"
    },
    "papermill": {
     "duration": 0.061362,
     "end_time": "2024-04-18T19:40:26.653508",
     "exception": false,
     "start_time": "2024-04-18T19:40:26.592146",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Squared Error: 166.04590831856532\n"
     ]
    }
   ],
   "source": [
    "mse = mean_squared_error(y_test, y_pred)\n",
    "print(\"Mean Squared Error:\", mse)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e3833a83",
   "metadata": {
    "papermill": {
     "duration": 0.048194,
     "end_time": "2024-04-18T19:40:26.748106",
     "exception": false,
     "start_time": "2024-04-18T19:40:26.699912",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "RANDOM FOREST"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "48292406",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-18T19:40:26.849918Z",
     "iopub.status.busy": "2024-04-18T19:40:26.849388Z",
     "iopub.status.idle": "2024-04-18T19:40:27.114300Z",
     "shell.execute_reply": "2024-04-18T19:40:27.112015Z"
    },
    "papermill": {
     "duration": 0.318786,
     "end_time": "2024-04-18T19:40:27.117419",
     "exception": false,
     "start_time": "2024-04-18T19:40:26.798633",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Squared Error: 224.0158062968164\n"
     ]
    }
   ],
   "source": [
    "nsamples, nx, ny = X_train.shape\n",
    "X_train_reshaped = X_train.reshape((nsamples,nx*ny))\n",
    "nsamples, nx, ny = X_test.shape\n",
    "X_test_reshaped = X_test.reshape((nsamples,nx*ny))\n",
    "\n",
    "rf = RandomForestRegressor(n_estimators=100, random_state=42)\n",
    "rf.fit(X_train_reshaped,y_train)\n",
    "y_pred = rf.predict(X_test_reshaped)\n",
    "\n",
    "# Evaluate the model\n",
    "mse = mean_squared_error(y_test, y_pred)\n",
    "print(\"Mean Squared Error:\", mse)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fcb53c1d",
   "metadata": {
    "papermill": {
     "duration": 0.049475,
     "end_time": "2024-04-18T19:40:27.217313",
     "exception": false,
     "start_time": "2024-04-18T19:40:27.167838",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 130897,
     "sourceId": 312329,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 3159005,
     "sourceId": 5469218,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 3159164,
     "sourceId": 5469527,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30458,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 47.994858,
   "end_time": "2024-04-18T19:40:30.203448",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-04-18T19:39:42.208590",
   "version": "2.4.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
